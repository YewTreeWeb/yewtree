$breakpoints: (xs: 30rem, // ~480px
sm: 37.5rem, // ~600px
md: 64rem, // ~1024px
lg: 80rem, // ~1280px
xl: 90rem // ~1440px
);

$resolution: (
  120: 120,
  124: 124.8,
  144: 144,
  192: 192
);

$ratios: (
  1_2x: 1.25,
  1_3x: 1.3,
  1_5x: 1.5,
  2x: 2
);

@mixin breakpoint($breakpoint, $min-max: 'min', $logic: 'screen', $property: 'width', $retina: false, $res: '192', $ratio: '2x') {
  @if($logic != null) {
    @if(str-index($property, 'device')) {
      @if $retina {
        @media only #{$logic} and (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)),
        (-webkit-min-device-pixel-ratio: map-get($map: $ratios, $key: $ratio)), 
        (min-resolution: map-get($map: $resolution, $key: $res)dpi) {
          @content;
        }
      }

      @else {
        @media only #{$logic} and (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)) {
          @content;
        }
      }
    }

    @else {
      @if $retina {
        @media #{$logic} and (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)),
        (-webkit-min-device-pixel-ratio: map-get($map: $ratios, $key: $ratio)), 
        (min-resolution: map-get($map: $resolution, $key: $res)dpi) {
          @content;
        }
      }
      @else {
        @media #{$logic} and (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)) {
          @content;
        }
      }
    }
  }

  @else {
    @if $retina {
      @media (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)),
      (-webkit-min-device-pixel-ratio: map-get($map: $ratios, $key: $ratio)), 
      (min-resolution: map-get($map: $resolution, $key: $res)dpi) {
        @content;
      }
    }
    @else {
      @media (#{$min-max}-#{$property}: map-get($map: $breakpoints, $key: $breakpoint)) {
        @content;
      }
    }
  }
}
